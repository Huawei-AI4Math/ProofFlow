[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "proofflow"
version = "1.0.0"
description = "Automated mathematical proof formalization using Large Language Models"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "ProofFlow Team", email = "contact@proofflow.ai"}
]
maintainers = [
    {name = "ProofFlow Team", email = "contact@proofflow.ai"}
]
keywords = [
    "mathematics",
    "formal-verification", 
    "lean4",
    "proof-assistant",
    "large-language-models",
    "artificial-intelligence",
    "automated-theorem-proving",
    "mathematical-proofs"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]
requires-python = ">=3.8"
dependencies = [
    "openai>=1.0.0",
    "pydantic>=2.0.0",
    "networkx>=3.0",
    "matplotlib>=3.5.0",
    "pyvis>=0.3.0",
    "json5>=0.9.0",
    "python-dotenv>=1.0.0",
    "pandas>=1.5.0",
    "openpyxl>=3.0.0",
    "numpy>=1.21.0",
    "transformers>=4.30.0",
    "torch>=2.0.0",
    "accelerate>=0.20.0",
    "tiktoken>=0.5.0",
    "httpx>=0.24.0",
    "requests>=2.28.0",
    "kimina-client>=0.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=1.0.0",
]
notebooks = [
    "jupyter>=1.0.0",
    "ipykernel>=6.0.0",
    "notebook>=6.4.0",
]

[project.urls]
Homepage = "https://github.com/proofflow/proofflow"
Documentation = "https://proofflow.readthedocs.io/"
Repository = "https://github.com/proofflow/proofflow"
"Bug Tracker" = "https://github.com/proofflow/proofflow/issues"

[project.scripts]
proofflow = "proofflow.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["proofflow*"]

[tool.setuptools.package-data]
proofflow = [
    "prompts/*.md",
    "data/*.json",
    "data/*.xlsx",
]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--cov=proofflow",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.coverage.run]
source = ["proofflow"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
